name: Build OpenWrt
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 手动触发选项

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取仓库代码（包含dts和配置文件）
        uses: actions/checkout@v4

      - name: 调试1：查看当前仓库文件结构
        run: |
          echo "当前工作目录: $(pwd)"
          echo "根目录文件列表："
          ls -la
          echo "dts文件夹内容："
          ls -la dts || echo "dts文件夹不存在"
          echo "configs文件夹内容："
          ls -la configs || echo "configs文件夹不存在"

      - name: 克隆OpenWrt源码（完整克隆确保架构支持）
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          path: openwrt
          fetch-depth: 0  # 完整克隆而非浅克隆
          ref: master  # 指定使用master分支

      - name: 调试2：确认OpenWrt源码结构
        run: |
          echo "OpenWrt源码根目录："
          ls -la openwrt
          echo "目标架构目录检查（ipq60xx）："
          ls -la openwrt/target/linux/ || echo "target/linux目录不存在"
          ls -la openwrt/target/linux/ipq60xx || echo "ipq60xx架构目录不存在"

      - name: 安装编译依赖（修复python3-distutils问题）
        run: |
          sudo apt-get update
          # 先尝试安装python3-distutils，如失败则跳过
          sudo apt-get install -y \
            build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk flex git gettext libssl-dev \
            xsltproc wget curl unzip python3 \
            libelf-dev libdw-dev libiberty-dev rsync subversion \
            gcc-multilib g++-multilib quilt libc6-dev-i386
          
          # 单独处理python3-distutils，如失败则使用替代方案
          if ! sudo apt-get install -y python3-distutils; then
            echo "python3-distutils安装失败，尝试手动安装setuptools"
            wget https://bootstrap.pypa.io/ez_setup.py -O - | sudo python3
          fi

      - name: 更新并安装OpenWrt Feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 复制DTS文件并验证
        run: |
          mkdir -p openwrt/target/linux/ipq60xx/dts
          if [ -f "dts/zn-m2.dts" ]; then
            cp dts/zn-m2.dts openwrt/target/linux/ipq60xx/dts/
            echo "DTS文件复制结果："
            ls -la openwrt/target/linux/ipq60xx/dts/zn-m2.dts || echo "DTS文件复制失败"
          else
            echo "错误：dts/zn-m2.dts文件不存在"
            exit 1
          fi

      - name: 加载并验证配置文件
        run: |
          cd openwrt
          if [ -f "../configs/zn-m2_defconfig" ]; then
            cp ../configs/zn-m2_defconfig .config
            make defconfig
            echo "配置文件内容验证："
            grep "TARGET_ipq60xx" .config || echo "配置文件中未找到ipq60xx目标架构"
            grep "CONFIG_TARGET" .config | head -n 10
          else
            echo "错误：../configs/zn-m2_defconfig文件不存在"
            exit 1
          fi

      - name: 下载编译依赖包
        run: |
          cd openwrt
          make download -j$(nproc)
          if [ -z "$(ls -A dl/)" ]; then
            echo "错误：依赖包下载失败，dl目录为空"
            exit 1
          fi

      - name: 编译固件（带详细日志）
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s

      - name: 详细检查构建输出
        run: |
          echo "OpenWrt bin目录结构："
          ls -R openwrt/bin/ || echo "bin目录不存在"
          echo "目标架构目录详细检查："
          ls -la openwrt/bin/targets/ || echo "targets目录不存在"
          ls -la openwrt/bin/targets/ipq60xx/ || echo "ipq60xx输出目录不存在"
          echo "所有生成的固件文件："
          find openwrt/bin/targets/ -type f -name "*.bin" -o -name "*.img" || echo "未找到固件文件"

      - name: 上传编译产物
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-firmware
          path: |
            openwrt/bin/targets/ipq60xx/**/*.bin
            openwrt/bin/targets/ipq60xx/**/*.img
            openwrt/target/linux/ipq60xx/dts/zn-m2.dts
            openwrt/.config
          retention-days: 30
          if-no-files-found: warn

name: 构建 zn-m2 设备的 OpenWrt 固件（ipq60xx 架构）

on:
  workflow_dispatch:  # 允许手动触发构建
  schedule:
    - cron: '0 0 * * 0'  # 每周日自动构建

env:
  REPO_URL: https://github.com/openwrt/openwrt  # 官方 OpenWrt 源码地址
  REPO_BRANCH: openwrt-24.10  # 使用的源码分支
  TARGET_DEVICE: ipq60xx  # 目标架构
  SPECIFIC_DEVICE: zn-m2  # 具体设备型号
  FEEDS_CONF: feeds.conf.default  # 软件源配置文件
  CONFIG_FILE: .config  # 编译配置文件
  DIY_SCRIPT: diy.sh  # 自定义脚本
  UPLOAD_ARTIFACT: true  # 是否上传编译产物

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 Ubuntu 系统运行
    name: 编译 zn-m2 固件

    steps:
      - name: 检出代码
        uses: actions/checkout@main

      - name: 初始化环境
        run: |
          # 更新系统并安装编译依赖
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev \
          file wget llvm python3-pyelftools libpython3-dev aria2 jq
          # 设置时区为上海
          sudo timedatectl set-timezone Asia/Shanghai

      - name: 克隆官方 OpenWrt 源码
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          # 更新并安装软件源
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 从 Kwrt 提取 ipq60xx 支持文件
        run: |
          # 克隆 Kwrt 仓库获取设备支持文件
          git clone https://github.com/kiddin9/kwrt.git kwrt-tmp
          
          # 复制设备树和配置文件
          cp -rf kwrt-tmp/devices/qualcommax_ipq60xx/target/linux/qualcommax/* openwrt/target/linux/qualcommax/
          
          # 复制固件生成配置
          cp -rf kwrt-tmp/devices/qualcommax_ipq60xx/image/* openwrt/target/linux/qualcommax/image/
          
          # 复制必要补丁
          cp -rf kwrt-tmp/devices/qualcommax_ipq60xx/patches/* openwrt/target/linux/qualcommax/patches/
          
          # 复制设备专属配置脚本（仅保留设备支持相关部分）
          cp kwrt-tmp/devices/qualcommax_ipq60xx/diy.sh openwrt/$DIY_SCRIPT
          chmod +x openwrt/$DIY_SCRIPT

      - name: 配置固件参数
        run: |
          cd openwrt
          
          # 基础配置
          cat > $CONFIG_FILE << EOF
          CONFIG_TARGET_qualcommax=y  # 选择 qualcommax 目标平台
          CONFIG_TARGET_qualcommax_ipq60xx=y  # 选择 ipq60xx 子平台
          CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_zn-m2=y  # 选择 zn-m2 设备
          CONFIG_DEVEL=y  # 开发模式
          CONFIG_CCACHE=y  # 启用编译缓存加速
          CONFIG_PACKAGE_luci=y  # 安装 LuCI 界面
          CONFIG_PACKAGE_luci-theme-bootstrap=y  # 安装默认主题
          CONFIG_PACKAGE_firewall=y  # 安装防火墙
          CONFIG_PACKAGE_opkg=y  # 安装包管理工具
          CONFIG_PACKAGE_wpad-basic-mbedtls=y  # 安装基础无线支持
          EOF
          
          # 执行设备专属配置脚本
          ./$DIY_SCRIPT

      - name: 下载软件包
        run: |
          cd openwrt
          make defconfig  # 生成默认配置
          make download -j$(nproc)  # 多线程下载依赖包
          find dl -size -1024c -delete  # 删除无效文件

      - name: 编译固件
        run: |
          cd openwrt
          # 先尝试多线程编译，失败则单线程输出详细日志
          make -j$(nproc) || make -j1 V=s

      - name: 上传编译产物
        if: env.UPLOAD_ARTIFACT == 'true'  # 仅当启用上传时执行
        uses: actions/upload-artifact@main
        with:
          name: zn-m2-firmware  # 产物名称
          path: openwrt/bin/targets/qualcommax/ipq60xx/  # 固件存放路径

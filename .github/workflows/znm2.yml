name: Build ZN-M2 Firmware

on:
  push:
    branches: [ main ]
    paths:
      - 'target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq6018-zn-m2.dts'
      - 'target/linux/qualcommax/image/ipq60xx.mk'
      - '.github/workflows/build-zn-m2-only.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    timeout-minutes: 180  # 延长超时时间，避免中途中断

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: main
          submodules: 'recursive'

      - name: 系统环境准备
        run: |
          # 仅保留必要的资源检查
          free -h
          df -h
          # 增加swap确保编译不中断
          sudo fallocate -l 12G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: 配置依赖（简化输出）
        run: |
          echo "src-git packages https://git.openwrt.org/feed/packages.git" > feeds.conf.default
          echo "src-git luci https://git.openwrt.org/project/luci.git" >> feeds.conf.default
          echo "src-git routing https://git.openwrt.org/feed/routing.git" >> feeds.conf.default
          
          ./scripts/feeds clean > /dev/null 2>&1
          ./scripts/feeds update -f -a > /dev/null 2>&1
          
          # 删除冲突包
          rm -rf package/utils/audit package/utils/busybox package/boot/kexec-tools \
                 package/network/services/lldpd package/utils/policycoreutils
          
          # 快速添加依赖（不输出冗余信息）
          [ ! -d "package/feeds/packages" ] && git clone --quiet https://git.openwrt.org/feed/packages.git package/feeds/packages
          
          XZ_SOURCE=$(find package/feeds/packages -path "*/xz" | head -n 1)
          [ -n "$XZ_SOURCE" ] && [ ! -d "package/libs/xz" ] && mv "$XZ_SOURCE" package/libs/
          
          for lib in libev libpam libtirpc; do
            src=$(find package/feeds/packages -path "*/$lib" | head -n 1)
            [ -n "$src" ] && [ ! -d "package/libs/$lib" ] && mv "$src" package/libs/
          done
          
          src=$(find package/feeds/packages -path "*/net-snmp" | head -n 1)
          [ -n "$src" ] && [ ! -d "package/libs/net-snmp" ] && mv "$src" package/libs/
          
          rm -rf package/feeds/packages
          ./scripts/feeds install -a > /dev/null 2>&1

      - name: 修复设备树
        run: |
          DTSI_FILE="target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq6000-cmiot.dtsi"
          [ -f "$DTSI_FILE" ] && sed -i 's/#include "ipq6018-nss.dtsi"/\/\/&/' "$DTSI_FILE"

      - name: 生成配置
        run: |
          make distclean > /dev/null 2>&1
          cat > .config <<EOF
          CONFIG_TARGET_qualcommax=y
          CONFIG_TARGET_qualcommax_ipq60xx=y
          CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_zn_zn-m2=y
          CONFIG_PACKAGE_ath11k-firmware-ipq6018=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libpam=y
          CONFIG_PACKAGE_libtirpc=y
          CONFIG_PACKAGE_xz=y
          CONFIG_PACKAGE_net-snmp=y
          EOF
          make defconfig > /dev/null 2>&1

      - name: 编译工具链（关闭冗余输出）
        run: |
          # 只输出错误信息，其他内容重定向到文件
          make -j1 toolchain/compile V=0 2> toolchain-errors.log
          # 检查是否有错误
          if [ -s toolchain-errors.log ]; then
            echo "工具链编译错误："
            cat toolchain-errors.log
            exit 1
          fi

      - name: 编译固件（关闭冗余输出）
        run: |
          # 同样只输出错误
          make -j2 V=0 2> firmware-errors.log
          if [ -s firmware-errors.log ]; then
            echo "固件编译错误："
            cat firmware-errors.log
            exit 1
          fi

      - name: 检查产物（核心验证）
        run: |
          FIRMWARE_DIR="bin/targets/qualcommax/ipq60xx"
          if ls $FIRMWARE_DIR/*zn_zn-m2*.bin >/dev/null 2>&1; then
            echo "固件编译成功！"
            ls -lh $FIRMWARE_DIR/*zn_zn-m2*.bin
          else
            echo "未找到固件文件"
            exit 1
          fi

      - name: 上传固件
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: zn-m2-${{ github.run_id }}
          files: bin/targets/qualcommax/ipq60xx/*zn_zn-m2*.bin

      - name: 上传错误日志（仅失败时）
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs
          path: |
            toolchain-errors.log
            firmware-errors.log
          retention-days: 14

name: ZN-M2 Firmware Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检查环境依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git subversion libssl-dev gettext zlib1g-dev swig unzip time rsync

      - name: 克隆官方OpenWrt源码
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          path: openwrt-official
          ref: main  # 确保与libwrt版本兼容（如均为6.x分支）

      - name: 克隆libwrt源码
        uses: actions/checkout@v4
        with:
          repository: LiBwrt/openwrt-6.x
          path: libwrt
          ref: main

      - name: 合并libwrt的zn-m2硬件支持
        run: |
          cd openwrt-official
          
          # 复制zn-m2设备树文件（需替换[架构]为实际架构，如ramips、ath79等）
          ARCH="ramips"  # 假设zn-m2属于ramips架构，需根据实际情况修改
          mkdir -p target/linux/$ARCH/dts
          cp ../libwrt/target/linux/$ARCH/dts/zn-m2.dts target/linux/$ARCH/dts/
          
          # 复制zn-m2的默认配置
          cp ../libwrt/configs/zn-m2_defconfig .config
          
          # 合并驱动补丁（如有）
          if [ -d ../libwrt/package/kernel/zn-m2-drivers ]; then
            cp -r ../libwrt/package/kernel/zn-m2-drivers package/kernel/
          fi

      - name: 精简固件配置
        run: |
          cd openwrt-official
          
          # 更新feeds
          ./scripts/feeds update -a && ./scripts/feeds install -a
          
          # 加载默认配置并启用精简选项
          make defconfig
          
          # 通过命令行禁用不必要组件（进一步精简）
          echo "CONFIG_TARGET_ROOTFS_PARTSIZE=8" >> .config  # 减小根分区大小
          echo "CONFIG_PACKAGE_dnsmasq=y" >> .config         # 用轻量dnsmasq替代dnsmasq-full
          echo "CONFIG_PACKAGE_dropbear=y" >> .config        # 保留SSH
          echo "CONFIG_PACKAGE_luci-base=y" >> .config       # 保留基础LuCI
          echo "CONFIG_PACKAGE_luci-theme-bootstrap=y" >> .config  # 轻量主题
          echo "# CONFIG_PACKAGE_wget is not set" >> .config  # 移除wget
          echo "# CONFIG_PACKAGE_curl is not set" >> .config  # 移除curl
          echo "# CONFIG_PACKAGE_opkg is not set" >> .config  # 如需离线使用，可移除opkg
          echo "# CONFIG_IPV6 is not set" >> .config          # 按需禁用IPv6
          
          # 生成最终配置
          make defconfig

      - name: 编译固件
        run: |
          cd openwrt-official
          # 下载依赖
          make download -j$(nproc)
          # 开始编译（启用日志）
          make -j$(nproc) V=s BUILD_LOG=1

      - name: 上传编译日志
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: openwrt-official/logs/

      - name: 上传固件产物
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: zn-m2-firmware
          path: openwrt-official/bin/targets/*/*/*.bin
